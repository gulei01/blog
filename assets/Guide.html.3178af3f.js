import{r as p,a as t,c as e,f as n,b as o,F as c,e as s,g as l}from"./app.eb5e24ec.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";var r="/img/\u975E\u5FAA\u73AF\u5F15\u7528\u7684\u5B50\u5BF9\u8C61\u4E4B\u62F7\u8D1D.png",i="/img/JS\u5224\u7B49.jpg",k="/img/JsScope.png",b="/img/buble_sort.png",m="/img/select_sort.png",d="/img/insertionSort.gif";const h={},f=s(`<h1 id="javascript-guide" tabindex="-1"><a class="header-anchor" href="#javascript-guide" aria-hidden="true">#</a> Javascript Guide</h1><h2 id="\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B</h2><h3 id="\u5F15\u7528\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528\u7C7B\u578B" aria-hidden="true">#</a> \u5F15\u7528\u7C7B\u578B</h3><ul><li>Object</li></ul><h3 id="\u503C\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u503C\u7C7B\u578B" aria-hidden="true">#</a> \u503C\u7C7B\u578B</h3><ul><li>Null</li><li>Undefined</li><li>Number</li><li>Boolean</li><li>Symbol</li><li>BigInt</li><li>String</li></ul><h2 id="\u5185\u7F6E\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u5BF9\u8C61" aria-hidden="true">#</a> \u5185\u7F6E\u5BF9\u8C61</h2><ul><li>Date</li><li>Array</li><li>JSON</li><li>...</li></ul><h2 id="\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D</h2><blockquote><p>\u6DF1\u62F7\u8D1D\u662F\u6307\u6E90\u5BF9\u8C61\u4E0E\u62F7\u8D1D\u5BF9\u8C61\u4E92\u76F8\u72EC\u7ACB\uFF0C\u5176\u4E2D\u4EFB\u4F55\u4E00\u4E2A\u5BF9\u8C61\u7684\u6539\u52A8\u90FD\u4E0D\u4F1A\u5BF9\u53E6\u5916\u4E00\u4E2A\u5BF9\u8C61\u9020\u6210\u5F71\u54CD\u3002</p></blockquote><h3 id="_1-json-\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_1-json-\u62F7\u8D1D" aria-hidden="true">#</a> 1. JSON \u62F7\u8D1D</h3><p>\u6DF1\u62F7\u8D1D\u3002 <strong>\u7F3A\u70B9:</strong></p><ul><li>\u4F1A\u5FFD\u7565 undefined</li><li>\u4F1A\u5FFD\u7565 symbol</li><li>\u5982\u679C\u5BF9\u8C61\u7684\u5C5E\u6027\u4E3A Function\uFF0C\u56E0\u4E3A JSON \u683C\u5F0F\u5B57\u7B26\u4E32\u4E0D\u652F\u6301 Function\uFF0C\u5728\u5E8F\u5217\u5316\u7684\u65F6\u5019\u4F1A\u81EA\u52A8\u5220\u9664</li><li>\u8BF8\u5982 Map, Set, RegExp, Date, ArrayBuffer \u548C\u5176\u4ED6\u5185\u7F6E\u7C7B\u578B\u5728\u8FDB\u884C\u5E8F\u5217\u5316\u65F6\u4F1A\u4E22\u5931</li><li>\u4E0D\u652F\u6301\u5FAA\u73AF\u5F15\u7528\u5BF9\u8C61\u7684\u62F7\u8D1D\u3002</li></ul><h3 id="_2-object-assign" tabindex="-1"><a class="header-anchor" href="#_2-object-assign" aria-hidden="true">#</a> 2. Object.assign</h3><blockquote><p>Object.assign \u65B9\u6CD5\u53EA\u4F1A\u62F7\u8D1D\u6E90\u5BF9\u8C61\u81EA\u8EAB\u7684\u5E76\u4E14\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u5230\u76EE\u6807\u5BF9\u8C61\u3002</p></blockquote><p><strong>\u7F3A\u70B9:</strong></p><ul><li>\u5BF9\u8C61\u5D4C\u5957\u5C42\u6B21\u8D85\u8FC7 2 \u5C42\uFF0C\u5C31\u4F1A\u51FA\u73B0\u6D45\u62F7\u8D1D\u7684\u72B6\u51B5</li><li>\u975E\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u65E0\u6CD5\u88AB\u62F7\u8D1D\u3002</li></ul><h3 id="_3-messagechannel" tabindex="-1"><a class="header-anchor" href="#_3-messagechannel" aria-hidden="true">#</a> 3. MessageChannel</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6709undefined + \u5FAA\u73AF\u5F15\u7528</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">f</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>c <span class="token operator">=</span> obj<span class="token punctuation">.</span>b<span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>e <span class="token operator">=</span> obj<span class="token punctuation">.</span>a<span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c <span class="token operator">=</span> obj<span class="token punctuation">.</span>c<span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>d <span class="token operator">=</span> obj<span class="token punctuation">.</span>b<span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>e <span class="token operator">=</span> obj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> port1<span class="token punctuation">,</span> port2 <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    port2<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    port1<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">deepCopy</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">copy</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8BF7\u8BB0\u4F4F\`MessageChannel\`\u662F\u5F02\u6B65\u7684\u8FD9\u4E2A\u524D\u63D0\uFF01</span>
  <span class="token keyword">let</span> copyObj <span class="token operator">=</span> copy<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copyObj<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copyObj <span class="token operator">==</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><strong>\u7F3A\u70B9:</strong></p><ul><li>\u8FD9\u4E2A\u65B9\u6CD5\u662F\u5F02\u6B65\u7684</li><li>\u62F7\u8D1D\u6709\u51FD\u6570\u7684\u5BF9\u8C61\u65F6\uFF0C\u8FD8\u662F\u4F1A\u62A5\u9519</li></ul><h3 id="_4-\u9012\u5F52\u7248\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_4-\u9012\u5F52\u7248\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> 4. \u9012\u5F52\u7248\u6DF1\u62F7\u8D1D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>
    key <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    temp <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u5B57\u6BB5\u7684\u503C\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61\u5219\u9012\u5F52\u64CD\u4F5C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> temp <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5426\u5219\u76F4\u63A5\u8D4B\u503C\u7ED9\u65B0\u5BF9\u8C61</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">\u5FAA\u73AF\u5F15\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;coffe1891&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token string">&quot;deefRef&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6B64\u65F6\u5982\u679C\u8C03\u7528\u4E0A\u9762\u7684 deepCopy \u51FD\u6570\u7684\u8BDD\uFF0C\u4F1A\u9677\u5165\u4E00\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u4ECE\u800C\u5BFC\u81F4\u5806\u6808\u6EA2\u51FA\u3002\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u4E5F\u975E\u5E38\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u7684\u5B57\u6BB5\u662F\u5426\u5F15\u7528\u4E86\u8FD9\u4E2A\u5BF9\u8C61\u6216\u8FD9\u4E2A\u5BF9\u8C61\u7684\u4EFB\u610F\u7236\u7EA7\u5373\u53EF\uFF0C\u4FEE\u6539\u4E00\u4E0B\u4EE3\u7801\uFF1A</p></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>function deepCopy(obj, parent = null) {
    // \u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61
    let result = {};
    let keys = Object.keys(obj),
        key = null,
        temp = null,
        _parent = parent;
    // \u8BE5\u5B57\u6BB5\u6709\u7236\u7EA7\u5219\u9700\u8981\u8FFD\u6EAF\u8BE5\u5B57\u6BB5\u7684\u7236\u7EA7
    while (_parent) {
        // \u5982\u679C\u8BE5\u5B57\u6BB5\u5F15\u7528\u4E86\u5B83\u7684\u7236\u7EA7\u5219\u4E3A\u5FAA\u73AF\u5F15\u7528
        if (_parent.originalParent === obj) {
            // \u5FAA\u73AF\u5F15\u7528\u76F4\u63A5\u8FD4\u56DE\u540C\u7EA7\u7684\u65B0\u5BF9\u8C61
            return _parent.currentParent;
        }
        _parent = _parent.parent;
    }
    for (let i = 0; i &lt; keys.length; i++) {
        key = keys[i];
        temp = obj[key];
        // \u5982\u679C\u5B57\u6BB5\u7684\u503C\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61
        if (temp &amp;&amp; typeof temp === &#39;object&#39;) {
            // \u9012\u5F52\u6267\u884C\u6DF1\u62F7\u8D1D \u5C06\u540C\u7EA7\u7684\u5F85\u62F7\u8D1D\u5BF9\u8C61\u4E0E\u65B0\u5BF9\u8C61\u4F20\u9012\u7ED9 parent \u65B9\u4FBF\u8FFD\u6EAF\u5FAA\u73AF\u5F15\u7528
            result[key] = DeepCopy(temp, {
                originalParent: obj,
                currentParent: result,
                parent: parent
            });

        } else {
            result[key] = temp;
        }
    }
    return result;
}
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">\u975E\u5FAA\u73AF\u5F15\u7528\u7684\u5B50\u5BF9\u8C61\u4E4B\u62F7\u8D1D</p><p>\u4E0A\u9762\u5DF2\u7ECF\u89E3\u51B3\u4E86\u6DF1\u62F7\u8D1D\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898\uFF0C\u4F46\u662F\u8FD8\u4E0D\u662F\u7279\u522B\u7684\u5B8C\u5584\u3002\u9047\u5230\u4E0B\u8FB9\u8FD9\u79CD\u60C5\u51B5\u5C31\u4F1A\u51FA\u95EE\u9898\u3002</p></div><p><img src="`+r+`" alt=""></p><p>\u975E\u7236\u7EA7\u7684\u5F15\u7528\u4E5F\u662F\u4E00\u79CD\u5F15\u7528\uFF0C\u90A3\u4E48\u53EA\u8981\u8BB0\u5F55\u4E0B\u5BF9\u8C61 A \u4E2D\u7684\u6240\u6709\u5BF9\u8C61\uFF0C\u5E76\u4E0E\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u4E00\u4E00\u5BF9\u5E94\u5373\u53EF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Hash\u8868 \u8BB0\u5F55\u6240\u6709\u7684\u5BF9\u8C61\u5F15\u7528\u5173\u7CFB</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">dp</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> keys <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      key <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      existObj <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    existObj <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u8FD9\u4E2A\u5BF9\u8C61\u5DF2\u88AB\u8BB0\u5F55\u5219\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>existObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> existObj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u5BF9\u8C61</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      temp <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u5B57\u6BB5\u7684\u503C\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61\u5219\u9012\u5F52\u590D\u5236</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> temp <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">dp</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5426\u5219\u76F4\u63A5\u8D4B\u503C\u7ED9\u65B0\u5BF9\u8C61</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">dp</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="_5-lodash-clonedeep" tabindex="-1"><a class="header-anchor" href="#_5-lodash-clonedeep" aria-hidden="true">#</a> 5. lodash cloneDeep</h3><blockquote><p>lodash \u662F\u7528\u4E00\u4E2A\u6808\u8BB0\u5F55\u4E86\u6240\u6709\u88AB\u62F7\u8D1D\u7684\u5F15\u7528\u503C\uFF0C\u5982\u679C\u518D\u6B21\u78B0\u5230\u540C\u6837\u7684\u5F15\u7528\u503C\u7684\u65F6\u5019\uFF0C\u4E0D\u4F1A\u518D\u53BB\u62F7\u8D1D\u4E00\u904D\uFF0C\u800C\u662F\u5229\u7528\u4E4B\u524D\u5DF2\u7ECF\u62F7\u8D1D\u597D\u7684\u3002</p></blockquote><ul><li>\u652F\u6301\u5FAA\u73AF\u5BF9\u8C61\u3001\u5927\u91CF\u7684\u5185\u7F6E\u7C7B\u578B</li></ul><h2 id="\u5224\u7B49" tabindex="-1"><a class="header-anchor" href="#\u5224\u7B49" aria-hidden="true">#</a> \u5224\u7B49</h2><p><img src="`+i+`" alt=""></p><h2 id="\u51FD\u6570\u5E38\u89C1\u56DB\u79CD\u5F62\u6001" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5E38\u89C1\u56DB\u79CD\u5F62\u6001" aria-hidden="true">#</a> \u51FD\u6570\u5E38\u89C1\u56DB\u79CD\u5F62\u6001</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u51FD\u6570\u7684\u58F0\u660E\u5F62\u6001</span>
<span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FD\u6570\u7684\u58F0\u660E\u5F62\u6001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u51FD\u6570\u7684\u8868\u8FBE\u5F0F\u5F62\u6001 \u4E4B\u4E00</span>
<span class="token keyword">let</span> func0 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FD\u6570\u7684\u8868\u8FBE\u5F0F\u5F62\u6001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
  <span class="token comment">//\u51FD\u6570\u7684\u8868\u8FBE\u5F0F\u5F62\u6001 \u4E4B\u4E8C</span>
  <span class="token keyword">function</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u51FD\u6570\u7684\u5D4C\u5957\u5F62\u6001</span>
<span class="token keyword">let</span> <span class="token function-variable function">func2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FD\u6570\u7684\u5D4C\u5957\u5F62\u6001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">func3</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;func2\u5D4C\u5957\u5728func1\u91CC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">func3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u51FD\u6570\u7684\u95ED\u5305\u5F62\u6001</span>
<span class="token keyword">let</span> <span class="token function-variable function">func4</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;func4&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662F\u4EE5\u95ED\u5305\u5F62\u6001\u5B58\u5728\u7684\u51FD\u6570:&quot;</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//\u6240\u6709\u7684\u51FD\u6570\u90FD\u901A\u8FC7\u4E00\u5BF9\u62EC\u53F7\u201C()\u201D\u8C03\u7528</span>
<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">func0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">func4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="new-target-vs-instanceof" tabindex="-1"><a class="header-anchor" href="#new-target-vs-instanceof" aria-hidden="true">#</a> new.target vs. instanceof</h2><p>Using this instanceof Foo you will check if this instance is a Foo, but you can&#39;t ensure that was called with a new. I can just do a thing like this</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> notAFoo <span class="token operator">=</span> <span class="token function">Foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&quot;AnotherWord&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>And will work fine. Using new.target you can avoid this issues. I suggest you to read this book https://leanpub.com/understandinges6/read</p></div><h2 id="\u58F0\u660E\u63D0\u524D" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u63D0\u524D" aria-hidden="true">#</a> \u58F0\u660E\u63D0\u524D</h2><h3 id="\u51FD\u6570\u58F0\u660E\u63D0\u524D" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u58F0\u660E\u63D0\u524D" aria-hidden="true">#</a> \u51FD\u6570\u58F0\u660E\u63D0\u524D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//bar is not defined</span>
<span class="token keyword">let</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>voo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
<span class="token function">voo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Uncaught TypeError: voo is not a function</span>
<span class="token keyword">var</span> <span class="token function-variable function">voo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u53D8\u91CF\u58F0\u660E\u63D0\u524D" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u58F0\u660E\u63D0\u524D" aria-hidden="true">#</a> \u53D8\u91CF\u58F0\u660E\u63D0\u524D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// VM300:1 Uncaught ReferenceError: bar is not defined</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u2026\u2026\u5F88\u591A\u884C\u4EE3\u7801</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u2026\u2026\u5F88\u591A\u884C\u4EE3\u7801</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u2026\u2026\u5F88\u591A\u884C\u4EE3\u7801</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; 100</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u2026\u2026\u5F88\u591A\u884C\u4EE3\u7801</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u2026\u2026\u5F88\u591A\u884C\u4EE3\u7801</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u2026\u2026\u5F88\u591A\u884C\u4EE3\u7801</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; ReferenceError</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="iife" tabindex="-1"><a class="header-anchor" href="#iife" aria-hidden="true">#</a> IIFE</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>(function(){
    console.log(&quot;\u6211\u662F\u7ACB\u5373\u8FD0\u884C\u7684\u533F\u540D\u51FD\u6570&quot;);
})();

(function(){
    console.log(&quot;\u6211\u4E5F\u662F\u7ACB\u5373\u8FD0\u884C\u7684\u533F\u540D\u51FD\u6570&quot;);
}());
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h2><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u7BAD\u5934\u51FD\u6570\u5E76\u4E14\u6CA1\u6709\u81EA\u5DF1\u7684 <code>this</code>\uFF0C<code>arguments</code>\uFF0C<code>super</code> \u6216 <code>new.target</code>\u3002\u7BAD\u5934\u51FD\u6570\u8868\u8FBE\u5F0F\u66F4\u9002\u7528\u4E8E\u90A3\u4E9B\u672C\u6765\u9700\u8981\u533F\u540D\u51FD\u6570\u7684\u5730\u65B9\uFF0C\u5E76\u4E14\u5B83\u4E0D\u80FD\u7528\u4F5C\u6784\u9020\u51FD\u6570(new \u51FA\u6765)\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; 1</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; Uncaught ReferenceError: arguments is not defined</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">Foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: Foo is not a constructor</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u4F5C\u7528\u57DF</h2><blockquote><p><strong>\u4F5C\u7528\u57DF\u5373\u51FD\u6570\u6216\u53D8\u91CF\u7684\u53EF\u89C1\u533A\u57DF\u3002</strong> \u901A\u4FD7\u70B9\u8BF4\uFF0C\u51FD\u6570\u6216\u8005\u53D8\u91CF\u4E0D\u5728\u8FD9\u4E2A\u533A\u57DF\u5185\uFF0C\u5C31\u65E0\u6CD5\u8BBF\u95EE\u5230\u3002</p></blockquote><ul><li><p>\u5757\u7EA7\u4F5C\u7528\u57DF\u548C\u51FD\u6570\u4F5C\u7528\u57DF\u4E5F\u53EF\u4EE5\u7EDF\u79F0\u4E3A\u5C40\u90E8\u4F5C\u7528\u57DF\u3002</p><table><thead><tr><th>\u4F5C\u7528\u57DF\uFF1A</th><th>\u5168\u5C40\u4F5C\u7528\u57DF</th><th>\u51FD\u6570\u4F5C\u7528\u57DF</th><th>IIFE</th><th>ES6 \u5757\u7EA7\u4F5C\u7528\u57DF</th></tr></thead></table></li></ul><p>JS \u5F15\u64CE\u4F1A\u5148\u4ECE\u79BB\u81EA\u5DF1\u6700\u8FD1\u7684\u4F5C\u7528\u57DF A \u67E5\u627E\u53D8\u91CF a\uFF0C\u627E\u5230\u5C31\u4E0D\u518D\u7EE7\u7EED\u67E5\u627E\uFF0C\u627E\u4E0D\u5230\u5C31\u53BB\u4E0A\u5C42\u4F5C\u7528\u57DF</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var a = &quot;coffe&quot;;//\u5728\u5168\u5C40\u4F5C\u7528\u57DF
function func(){
    var b=&quot;coffe&quot;;//\u5728\u51FD\u6570\u4F5C\u7528\u57DF\u5185
    console.log(a);
}

console.log(a);//&gt;&gt; coffe
console.log(b);//&gt;&gt; Uncaught ReferenceError: b is not defined
func();//&gt;&gt; coffe
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+k+`" alt=""></p><h3 id="\u5757\u7EA7\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u5757\u7EA7\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u5757\u7EA7\u4F5C\u7528\u57DF</h3><p>ES6 \u89C4\u5B9A\uFF0C\u5728\u5757\u7EA7\u4F5C\u7528\u57DF\u4E4B\u4E2D\uFF0C\u51FD\u6570\u58F0\u660E\u8BED\u53E5\u7684\u884C\u4E3A\u7C7B\u4F3C\u4E8E let\uFF0C\u5728\u5757\u7EA7\u4F5C\u7528\u57DF\u4E4B\u5916\u4E0D\u53EF\u5F15\u7528\u3002 \u5411\u540E\uFF08backward\uFF09\u517C\u5BB9\u7684\u8003\u8651\uFF0C\u5728\u5757\u7EA7\u4F5C\u7528\u57DF\u4E2D\u58F0\u660E\u7684\u51FD\u6570\u4F9D\u7136\u53EF\u4EE5\u5728\u4F5C\u7528\u57DF\u5916\u90E8\u5F15\u7528\u3002<strong>\u5982\u679C\u9700\u8981\u51FD\u6570\u53EA\u5728\u5757\u7EA7\u4F5C\u7528\u57DF\u4E2D\u8D77\u4F5C\u7528\uFF0C\u5E94\u8BE5\u7528 let \u5173\u952E\u5B57\u5199\u6210\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u800C\u4E0D\u662F\u51FD\u6570\u58F0\u660E\u8BED\u53E5\u3002</strong> \u4E3A\u4E86\u8BC1\u660E\u8BE5\u6BB5\u8BBA\u8FF0\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u6BB5\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u51FD\u6570\u58F0\u660E</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; 1</span>

<span class="token punctuation">{</span>
  <span class="token keyword">var</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u672A\u4F7F\u7528let\u5173\u952E\u5B57\u7684\u51FD\u6570\u8868\u8FBE\u5F0F</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; 1</span>

<span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&gt;&gt; func is not defined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="\u6267\u884C\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> \u6267\u884C\u4E0A\u4E0B\u6587</h2><h2 id="\u7C7B\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4</h2><p>\u5148\u8BF4\u6570\u7EC4\uFF0C\u8FD9\u6211\u4EEC\u90FD\u719F\u6089\u3002\u5B83\u7684\u7279\u5F81\u6709\uFF1A\u53EF\u4EE5\u901A\u8FC7\u7D22\u5F15(index)\u8C03\u7528\uFF0C\u5982 array[0]\uFF1B\u5177\u6709\u957F\u5EA6\u5C5E\u6027 length\uFF1B\u53EF\u4EE5\u901A\u8FC7 for \u5FAA\u73AF\u6216 forEach \u65B9\u6CD5\uFF0C\u8FDB\u884C\u904D\u5386\u3002 \u90A3\u4E48\uFF0C\u7C7B\u6570\u7EC4\u662F\u4EC0\u4E48\u5462\uFF1F\u987E\u540D\u601D\u4E49\uFF0C\u5C31\u662F<strong>\u5177\u5907\u4E0E\u6570\u7EC4\u7279\u5F81\u7C7B\u4F3C\u7684\u5BF9\u8C61</strong> \u3002\u6BD4\u5982\uFF0C\u4E0B\u9762\u7684\u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u5C31\u662F\u4E00\u4E2A\u7C7B\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arrayLike <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">0</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token number">2</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u5B9E\u73B0-call" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-call" aria-hidden="true">#</a> \u5B9E\u73B0 .call</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* 
1. \u53C2\u8003call\u7684\u8BED\u6CD5\u89C4\u5219\uFF0C\u9700\u8981\u8BBE\u7F6E\u4E00\u4E2A\u53C2\u6570thisArg\uFF0C\u4E5F\u5C31\u662Fthis\u7684\u6307\u5411\uFF1B
2. \u5C06thisArg\u5C01\u88C5\u4E3A\u4E00\u4E2AObject\uFF1B
3. \u901A\u8FC7\u4E3AthisArg\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u65B9\u6CD5\uFF0C\u8FD9\u6837thisArg\u5C31\u662F\u8C03\u7528\u8BE5\u4E34\u65F6\u65B9\u6CD5\u7684\u5BF9\u8C61\u4E86\uFF0C\u4F1A\u5C06\u8BE5\u4E34\u65F6\u65B9\u6CD5\u7684this\u9690\u5F0F\u6307\u5411\u5230thisArg\u4E0A\uFF08\u53C2\u8003\u4E0A\u4E00\u7BC7\u6587\u7AE04. \u300A\u58F9.2.3 \u5F7B\u5E95\u641E\u61C2this\u300B\uFF09\uFF1B
5. \u6267\u884CthisArg\u7684\u4E34\u65F6\u65B9\u6CD5\uFF0C\u5E76\u4F20\u9012\u53C2\u6570\uFF1B
6. \u5220\u9664\u4E34\u65F6\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u65B9\u6CD5\u7684\u6267\u884C\u7ED3\u679C\u3002
*/</span>

<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mcall</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">thisArg<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>thisArg <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> thisArg <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    thisArg <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    thisArg <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>rest<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function">mcall</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token punctuation">.</span><span class="token function">mcall</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="\u5B9E\u73B0-apply" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-apply" aria-hidden="true">#</a> \u5B9E\u73B0 .apply</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mapply</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">thisArg<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>thisArg <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> thisArg <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    thisArg <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    thisArg <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">isArrayLike</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      args <span class="token operator">&amp;&amp;</span>
      <span class="token keyword">typeof</span> args <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span>
      <span class="token function">isFinite</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      args<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      args<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      args<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">4294967295</span>
    <span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> result<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isArrayLike</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;\u53C2\u6570\u4E0D\u4E3A\u6570\u7EC4\u6216\u7C7B\u6570\u7EC4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      result <span class="token operator">=</span> thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">delete</span> thisArg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token punctuation">.</span><span class="token function">mapply</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="\u5B9E\u73B0-bind" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-bind" aria-hidden="true">#</a> \u5B9E\u73B0 .bind</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mbind</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">objThis<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">newFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> thisArg <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">.</span>target <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> <span class="token function">Object</span><span class="token punctuation">(</span>objThis<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u7528new.target\u5224\u65AD\u6BD4\u7528 this instanceof newFunc\u597D \uFF0C\u67E5\u770B\u6587\u6863 new.target vs instanceof</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>objThis<span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> newFunc<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token punctuation">.</span><span class="token function">mbind</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">b</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">b</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u4E3A\u4EC0\u4E48\u4F7F\u7528-object-prototype-tostring-\u5224\u65AD\u7C7B\u578B-\u800C\u4E0D\u4F7F\u7528-typeof" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u4F7F\u7528-object-prototype-tostring-\u5224\u65AD\u7C7B\u578B-\u800C\u4E0D\u4F7F\u7528-typeof" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u4F7F\u7528 Object.prototype.toString \u5224\u65AD\u7C7B\u578B\uFF0C\u800C\u4E0D\u4F7F\u7528 typeof</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">typeof</span> <span class="token keyword">null</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u51FD\u6570\u90FD\u6709-prototype-\u5C5E\u6027-\u4E3A\u4EC0\u4E48-array-prototype-push-protorype-\u4E3A-undefined" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u90FD\u6709-prototype-\u5C5E\u6027-\u4E3A\u4EC0\u4E48-array-prototype-push-protorype-\u4E3A-undefined" aria-hidden="true">#</a> \u51FD\u6570\u90FD\u6709 prototype \u5C5E\u6027\uFF0C\u4E3A\u4EC0\u4E48 Array.prototype.push.protorype \u4E3A undefined</h2><ul><li>\u521B\u5EFA\u51FA\u6765\u7684\u51FD\u6570\u90FD\u4E0D\u80FD\u5220\u9664<code>prototype</code>,\u56E0\u4E3A\u51FD\u6570\u6784\u9020\u7684\u65F6\u5019\u8FD9\u4E2A\u5C5E\u6027<code>writable</code>\u4E3A<code>false</code>,\u4F46\u662F\u53EF\u4EE5\u8D4B\u503C\u4E3A<code>undefined</code>\u3002<code>Array</code>\u4E0A\u7684<code>prototype</code>\u7684<code>push</code>\u65B9\u6CD5\u5C31\u6CA1\u6709<code>prototype</code>\u5C5E\u6027</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mpush</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">delete</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mpush<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">//false</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mpush<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">mpush</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mpush<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u539F\u56E0</p><p><code>Array</code> \u662F\u901A\u8FC7 <code>class</code> \u7C7B\u6784\u9020\u5668\u6784\u9020\u7684\uFF0C \u901A\u8FC7\u7C7B\u6784\u9020\u5668\u5728\u539F\u578B\u6DFB\u52A0\u7684\u65B9\u6CD5\uFF0C\u6CA1\u6709 <code>prototype</code> \u5C5E\u6027 \u4F46\u662F\u5982\u679C\u76F4\u63A5\u5728<code>prototype</code>\u4E0A\u6DFB\u52A0\u7684\u65B9\u6CD5\u62E5\u6709<code>prototype</code>\u5C5E\u6027</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">newFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&quot;myFunc&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>test<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>newFunc<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>myFunc<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="class-\u548C-function-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#class-\u548C-function-\u7684\u533A\u522B" aria-hidden="true">#</a> class \u548C function \u7684\u533A\u522B</h2><p><code>class</code>\u662F\u7279\u6B8A\u7684\u51FD\u6570\uFF0C\u4F5C\u4E3A\u521B\u5EFA\u5BF9\u8C61\u5B9E\u4F8B\u7684\u6A21\u677F\uFF0C\u4E0D\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\uFF0C\u53EA\u80FD\u901A\u8FC7<code>new</code>\u6765\u5B9E\u4F8B\u5316\u5BF9\u8C61\u3002</p><p>class \u58F0\u660E\u7684\u51FD\u6570,\u5982<code>class Foo{ myfunc(){} }</code>,\u51FD\u6570<code>myFunc</code>\u65E0<code>prototype</code>\u5C5E\u6027\u3002</p><p>\u4F46\u662F\u901A\u8FC7<code>Foo.prototype.foo = function()</code> \u5F62\u5F0F\u58F0\u660E\u7684\u539F\u578B\u51FD\u6570<code>foo</code>\u62E5\u6709<code>prototype</code>\u5C5E\u6027</p><h2 id="new-target" tabindex="-1"><a class="header-anchor" href="#new-target" aria-hidden="true">#</a> new.target</h2><p><code>new.target</code> \u5C5E\u6027\u5141\u8BB8\u4F60\u68C0\u6D4B\u51FD\u6570\u6216\u6784\u9020\u65B9\u6CD5\u662F\u5426\u662F\u901A\u8FC7 <code>new</code> \u8FD0\u7B97\u7B26\u88AB\u8C03\u7528\u7684\u3002\u5728\u901A\u8FC7 <code>new</code> \u8FD0\u7B97\u7B26\u88AB\u521D\u59CB\u5316\u7684\u51FD\u6570\u6216\u6784\u9020\u65B9\u6CD5\u4E2D\uFF0C<code>new.target</code> \u8FD4\u56DE\u4E00\u4E2A\u6307\u5411\u6784\u9020\u65B9\u6CD5\u6216\u51FD\u6570\u7684\u5F15\u7528\u3002\u5728\u666E\u901A\u7684\u51FD\u6570\u8C03\u7528\u4E2D\uFF0C<code>new.target</code> \u7684\u503C\u662F <code>undefined</code>\u3002</p><h2 id="\u539F\u578B\u4E0E\u539F\u578B\u94FE" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u4E0E\u539F\u578B\u94FE" aria-hidden="true">#</a> \u539F\u578B\u4E0E\u539F\u578B\u94FE</h2><ul><li>\u6240\u6709\u5BF9\u8C61\u90FD\u6709<code>__proto__</code>\u5C5E\u6027\uFF0C\u5176\u5B9E<code>__proto__</code>\u5728\u6D4F\u89C8\u5668\u5185\u90E8\u6709\u4E2A\u7B26\u53F7\u4E3A<code>[[Prototype]]</code>\u7684\u5C5E\u6027</li><li>\u51FD\u6570\u4E5F\u662F\u5BF9\u8C61</li><li><code>prototype</code> \u53EA\u662F \u51FD\u6570\u5BF9\u8C61 \u62E5\u6709\u7684\u4E00\u4E2A \u666E\u901A\u5BF9\u8C61 \u7684\u5C5E\u6027</li><li><code>Function.prototype</code> \u662F \u6240\u6709\u51FD\u6570 \u548C \u5185\u7F6E\u5BF9\u8C61 \u7684\u539F\u578B</li><li><code>Function.prototype.__proto__ === Object.prototype</code></li><li><code>Object.prototype.__proto__ === null</code></li><li><code>Object.__proto__ === Function.prototype</code></li></ul><h2 id="event-loop-\u4E8B\u4EF6\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#event-loop-\u4E8B\u4EF6\u5FAA\u73AF" aria-hidden="true">#</a> Event Loop \u4E8B\u4EF6\u5FAA\u73AF</h2>`,85),g={href:"https://coffe1891.gitbook.io/frontend-hard-mode-interview/1/1.2.8",target:"_blank",rel:"noopener noreferrer"},y=l("link"),w=s(`<h2 id="\u5B9E\u73B0\u6808-stack" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6808-stack" aria-hidden="true">#</a> \u5B9E\u73B0\u6808 Stack</h2><blockquote><p><strong>LIFO</strong>\u540E\u5165\u5148\u51FA</p></blockquote><h3 id="\u5806\u7684\u5C5E\u6027\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5806\u7684\u5C5E\u6027\u5B9A\u4E49" aria-hidden="true">#</a> \u5806\u7684\u5C5E\u6027\u5B9A\u4E49</h3><table><thead><tr><th>\u7C7B\u578B</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>top [param]</td><td>\u67E5\u770B\u5F53\u524D\u6808\u9876\u4F4D\u7F6E</td></tr><tr><td>pop [func]</td><td>\u5220\u9664\u6808\u9876\u5143\u7D20</td></tr><tr><td>push [func]</td><td>\u5C06\u65B0\u5143\u7D20\u5165\u6808</td></tr><tr><td>peek [func]</td><td>\u67E5\u770B\u5F53\u524D\u6808\u9876\u5143\u7D20</td></tr><tr><td>length [func]</td><td>\u67E5\u770B\u6808\u5143\u7D20\u603B\u6570</td></tr><tr><td>clear [func]</td><td>\u6E05\u7A7A\u6808\u5185\u5143\u7D20</td></tr><tr><td>isempty [func]</td><td>\u662F\u5426\u4E3A\u7A7A</td></tr></tbody></table><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">isempty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="\u5B9E\u73B0\u961F\u5217-queue" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u961F\u5217-queue" aria-hidden="true">#</a> \u5B9E\u73B0\u961F\u5217 Queue</h2><blockquote><p><strong>FIFO</strong>\u5148\u8FDB\u5148\u51FA\uFF0C\u4E00\u7AEF\u53EA\u80FD\u589E\u52A0\uFF0C\u53E6\u4E00\u7AEF\u53EA\u80FD\u51CF\u5C11</p></blockquote><table><thead><tr><th>\u7C7B\u578B</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>enqueue [func]</td><td>\u5411\u961F\u5217\u672B\u5C3E\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20</td></tr><tr><td>dequeue [func]</td><td>\u5220\u9664\u961F\u5217\u9996\u7684\u5143\u7D20</td></tr><tr><td>front [func]</td><td>\u8BFB\u53D6\u961F\u5217\u9996\u7684\u5143\u7D20</td></tr><tr><td>back [func]</td><td>\u8BFB\u53D6\u961F\u5217\u5C3E\u7684\u5143\u7D20</td></tr><tr><td>toString [func]</td><td>\u663E\u793A\u961F\u5217\u6240\u6709\u5143\u7D20</td></tr><tr><td>clear [func]</td><td>\u6E05\u7A7A\u5F53\u524D\u961F\u5217</td></tr><tr><td>empty [func]</td><td>\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</td></tr><tr><td>size [func]</td><td>\u83B7\u53D6\u961F\u5217\u957F\u5EA6</td></tr></tbody></table><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">desc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
foo<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="\u5B9E\u73B0\u94FE\u8868-link" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u94FE\u8868-link" aria-hidden="true">#</a> \u5B9E\u73B0\u94FE\u8868 Link</h2><h3 id="\u5355\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u5355\u94FE\u8868" aria-hidden="true">#</a> \u5355\u94FE\u8868</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code></code></pre><div class="line-numbers"></div></div><h3 id="\u5FAA\u73AF\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u94FE\u8868" aria-hidden="true">#</a> \u5FAA\u73AF\u94FE\u8868</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code></code></pre><div class="line-numbers"></div></div><h3 id="\u53CC\u5411\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u53CC\u5411\u94FE\u8868" aria-hidden="true">#</a> \u53CC\u5411\u94FE\u8868</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code></code></pre><div class="line-numbers"></div></div><h2 id="\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F" aria-hidden="true">#</a> \u6392\u5E8F</h2><blockquote><p>\u7A33\u5B9A\u6027\uFF1A \u4FDD\u8BC1\u6392\u5E8F\u524D\u4E24\u4E2A\u76F8\u7B49\u7684\u6570\u5176\u5728\u5E8F\u5217\u7684\u524D\u540E\u4F4D\u7F6E\u987A\u5E8F\u548C\u6392\u5E8F\u540E\u5B83\u4EEC\u4E24\u4E2A\u7684\u524D\u540E\u4F4D\u7F6E\u987A\u5E8F\u76F8\u540C\u3002</p></blockquote><ul><li><p>\u57FA\u4E8E\u6BD4\u8F83\u7684\u6392\u5E8F\u7B97\u6CD5:</p><ol><li>BUB - \u5192\u6CE1\u6392\u5E8F \u7A33\u5B9A</li><li>SEL - \u9009\u62E9\u6392\u5E8F \u4E0D\u7A33\u5B9A</li><li>INS - \u63D2\u5165\u6392\u5E8F</li><li>MER - \u5F52\u5E76\u6392\u5E8F</li><li>QUI - \u5FEB\u901F\u6392\u5E8F</li><li>R-Q - \u968F\u673A\u5FEB\u901F\u6392\u5E8F</li><li>XIR - \u5E0C\u5C14\u6392\u5E8F</li></ol></li><li><p>\u4E0D\u57FA\u4E8E\u6BD4\u8F83\u7684\u6392\u5E8F\u7B97\u6CD5:</p><ol><li>COU - \u8BA1\u6570\u6392\u5E8F</li><li>RAD - \u57FA\u6570\u6392\u5E8F</li></ol></li></ul><h3 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h3><p><img src="`+b+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> kItem <span class="token operator">=</span> arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> kItemNext <span class="token operator">=</span> arr<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> tmp<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>kItemNext <span class="token operator">&gt;</span> kItem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tmp <span class="token operator">=</span> kItemNext<span class="token punctuation">;</span>
      arr<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
      arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h3><p><img src="`+m+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      minIndex <span class="token operator">=</span> k<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
  arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h3><blockquote><p>\u6253\u6251\u514B\u539F\u7406</p></blockquote><p><img src="`+d+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">var</span> preIndex<span class="token punctuation">,</span> current<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    preIndex <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    current <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      preIndex<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> current<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u5E0C\u5C14\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a> \u5E0C\u5C14\u6392\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">shellSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> gap <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;=================&quot;</span><span class="token punctuation">,</span> gap<span class="token punctuation">,</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> current <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">-</span> gap<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;!!!&quot;</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> i<span class="token punctuation">,</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>j<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> current <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> j <span class="token operator">-=</span> gap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span>j <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;gap&quot;</span><span class="token punctuation">,</span> gap<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      arr<span class="token punctuation">[</span>j <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    gap <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>gap <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
/* \u9012\u5F52\u5F52\u5E76\u6392\u5E8F */
function merge(left, right) {
  var result = [];
  while (left.length &amp;&amp; right.length) {
    if (left[0] &lt;= right[0]) {
      result.push(left.shift());
    } else {
      result.push(right.shift());
    }
  }
  while (left.length) result.push(left.shift());
  while (right.length) result.push(right.shift());
  return result;
}
function mergeSort(arr) {
  var len = arr.length;
  if (len &lt; 2) {
    return arr;
  }
  var middle = Math.floor(len / 2),
    left = arr.slice(0, middle),
    right = arr.slice(middle);
  return merge(mergeSort(left), mergeSort(right));
}
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,33);function v(j,x){const a=p("ExternalLinkIcon");return t(),e(c,null,[f,n("p",null,[n("a",g,[y,o(a)])]),w],64)}var A=u(h,[["render",v]]);export{A as default};
